{"version":3,"sources":["components/card-title/CardTitle.js","components/imput-fields/name-imput-field/NameImputField.js","components/imput-fields/room-imput-field/RoomImputField.js","components/card-action/CardAction.js","containers/auth/Auth.js","components/users-collection/UsersCollection.js","components/chat-messages/ChatMessages.js","components/chat-content/ChatContent.js","components/chat-actions/ChatActions.js","containers/chat/Chat.js","containers/app/App.js","index.js"],"names":["CardTitle","react_default","a","createElement","className","NameImputField","_ref","nameValue","onChangeNameValue","onChange","value","type","id","name","required","htmlFor","RoomImputField","roomValue","onChangeRoomValue","CardAction","Auth","state","resetInputs","_this","setState","e","target","onHandleSubmit","_this$state","preventDefault","push","props","history","concat","_this$state2","this","onSubmit","card_title_CardTitle","name_imput_field_NameImputField","room_imput_field_RoomImputField","card_action_CardAction","Component","UsersCollection","users","map","user","index","key","ChatMessages","messages","messagesRef","ref","message","messageID","ChatContent","users_collection_UsersCollection","chat_messages_ChatMessages","ChatActions","onHandleChangeMessage","resetMessage","onSubmitMessage","_this$props","socket","room","emit","onKeyPress","keyCode","trim","placeholder","autoFocus","autoComplete","onKeyDown","disabled","onClick","Chat","io","React","createRef","componentWillMount","on","console","log","search","location","searchParams","componentDidMount","joinNewUser","params","split","initializeParams","data","userID","initializideMessage","addNewMessage","current","messagesScrol","Object","toConsumableArray","node","scrollTop","scrollHeight","chat_content_ChatContent","assign","chat_actions_ChatActions","App","react_router_dom","react_router","exact","path","component","containers_auth_Auth","chat_Chat","ReactDOM","render","containers_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.d09e8575.chunk.js","sourcesContent":["import React from 'react';\n\nconst CardTitle = () => (\n  <h4 className=\"card-title\">Awesome chat</h4>\n);\n\nexport default CardTitle;\n","import React from 'react';\nimport '../imputs-field.css';\n\nconst NameImputField = ({ nameValue, onChangeNameValue }) => (\n  <div className=\"input-field\">\n    <input\n      onChange={onChangeNameValue}\n      value={nameValue}\n      type=\"text\"\n      id=\"name\"\n      className=\"validate\"\n      name=\"name\"\n      required\n    />\n    <label htmlFor=\"name\">Name</label>\n  </div>\n);\n\nexport default NameImputField;\n","import React from 'react';\nimport '../imputs-field.css';\n\nconst RoomImputField = ({ roomValue, onChangeRoomValue }) => (\n  <div className=\"input-field\">\n    <input\n      onChange={onChangeRoomValue}\n      value={roomValue}\n      type=\"text\"\n      id=\"room\"\n      className=\"validate\"\n      name=\"room\"\n      required\n    />\n    <label htmlFor=\"room\">Room</label>\n  </div>\n);\n\nexport default RoomImputField;\n","import React from 'react';\nimport './card-action.css';\n\nconst CardAction = () => (\n  <div className=\"card-action\">\n    <button className=\"waves-effect waves-light btn\" type=\"submit\">Enter chat</button>\n  </div>\n);\n\nexport default CardAction;\n","import React, { Component } from 'react';\nimport './Auth.css';\nimport CardTitle from '../../components/card-title/CardTitle';\nimport NameImputField from '../../components/imput-fields/name-imput-field/NameImputField';\nimport RoomImputField from '../../components/imput-fields/room-imput-field/RoomImputField';\nimport CardAction from '../../components/card-action/CardAction';\n\nclass Auth extends Component {\n \n    state = {\n      nameValue: '',\n      roomValue: '',\n    };\n\n\n  resetInputs = (nameValue, roomValue) => {\n    this.setState({\n      nameValue,\n      roomValue,\n    });\n  }\n\n  onChangeRoomValue = (e) => {\n    const { value } = e.target;\n    const { nameValue } = this.state;\n    this.resetInputs(nameValue, value);\n  }\n\n  onChangeNameValue = (e) => {\n    const { value } = e.target;\n    const { roomValue } = this.state;\n    this.resetInputs(value, roomValue);\n  }\n\n  onHandleSubmit = (e) => {\n    const { nameValue, roomValue } = this.state;\n    e.preventDefault();\n    this.resetInputs('', '');\n    const { push } = this.props.history;\n    push(`/chat?name=${nameValue}&room=${roomValue}`);\n  }\n\n  render() {\n    const { nameValue, roomValue } = this.state;\n    return (\n      <form\n        onSubmit={this.onHandleSubmit}\n        className=\"auth\"\n      >\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <CardTitle />\n            <NameImputField\n              nameValue={nameValue}\n              onChangeNameValue={this.onChangeNameValue}\n            />\n            <RoomImputField\n              roomValue={roomValue}\n              onChangeRoomValue={this.onChangeRoomValue}\n            />\n            <CardAction />\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Auth;\n","import React from 'react';\nimport './users-collection.css';\n\nconst UsersCollection = ({ users, id }) => {\n  let className;\n  return (\n    <div className=\"chat-users collection\">\n      {users.map((user, index) => {\n        const { name } = user;\n        className = user.id === id ? 'collection-item active' : 'collection-item';\n        return (\n        /* eslint-disable-next-line */\n                <a \n                  key={index}\n                  className={className}\n                >\n                  {name}\n                </a>\n        );\n      })}\n\n    </div>\n  );\n};\n\nexport default UsersCollection;\n","import React from 'react';\nimport './chat-message.css';\n\nconst ChatMessages = ({ messages, id, messagesRef }) => {\n  let className;\n\n  return (\n\n    <div\n      ref={messagesRef}\n      className=\"chat-messages\"\n    >\n      {messages.map((message, key) => {\n        const { messageID, name } = message;\n        if (id === messageID) {\n          className = 'message owner';\n        } else {\n          className = 'message';\n        }\n        return (\n          <div\n            key={key}\n            className={className}\n          >\n            <div\n              className=\"message-content z-depth-1\"\n            >\n              <b>{name}</b>\n:             {' '}\n              {message.message}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ChatMessages;\n","import React from 'react';\nimport './chat-content.css';\nimport UsersCollection from '../users-collection/UsersCollection';\nimport ChatMessages from '../chat-messages/ChatMessages';\n\nconst ChatContent = (props) => (\n  <div className=\"chat\">\n    <UsersCollection {...props} />\n    <ChatMessages {...props} />\n  </div>\n);\n\nexport default ChatContent;\n","import React, { Component } from 'react';\nimport './chat-action.css';\n\nclass ChatActions extends Component {\n  onHandleChangeMessage = (e) => {\n    const { value } = e.target;\n    const { resetMessage } = this.props;\n    resetMessage(value);\n  }\n\n  onSubmitMessage = () => {\n    const {\n      socket, message, name, room, resetMessage, id,\n    } = this.props;\n    socket.emit('createNewMessage', {\n      message, name, room, id,\n    });\n    resetMessage('');\n  }\n\n  onKeyPress = (e) => {\n    const { message } = this.props;\n    if (e.keyCode === 13 && message.trim() !== '') {\n      this.onSubmitMessage();\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n    return (\n      <div className=\"actions\">\n        <div className=\"input-field\">\n          <input\n            type=\"text\"\n            placeholder=\"Type your message\"\n            autoFocus\n            autoComplete=\"false\"\n            onChange={this.onHandleChangeMessage}\n            onKeyDown={this.onKeyPress}\n            value={message}\n          />\n        </div>\n        <button\n          disabled={message.trim() === ''}\n          className=\"btn\"\n          onClick={this.onSubmitMessage}\n        >\n            Send\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ChatActions;\n","import React, { Component } from 'react';\nimport io from 'socket.io-client';\nimport ChatContent from '../../components/chat-content/ChatContent';\nimport ChatActions from '../../components/chat-actions/ChatActions';\n\n\nclass Chat extends Component {\n\n    socket = io();\n\n    messagesRef = React.createRef();\n\n    state = {\n      messages: [],\n      message: '',\n      room: '',\n      name: '',\n      id: '',\n      messageID: '',\n      users: [],\n    };\n\n\n  componentWillMount = () => {\n    this.socket.on('connect', () => {\n      console.log('client connect');\n    });\n    const { search } = this.props.location;\n    this.searchParams(search);\n  }\n\n  componentDidMount = () => {\n      this.joinNewUser();\n  }\n\n  searchParams = (location) => {\n    const params = location.split('&');\n    const name = params[0].split('=')[1];\n    const room = params[1].split('=')[1];\n    this.initializeParams(name, room);\n  }\n\n  initializeParams = (name, room) => {\n    this.setState({ name, room });\n  }\n\n  joinNewUser = () => {\n    const { name, room } = this.state;\n    this.socket.emit('join', { name, room }, (data) => {\n      this.setState({ id: data.userID });\n      this.initializideMessage();\n    });\n  }\n\n  initializideMessage = () => {\n    this.socket.on('usersUpdate', (users) => {\n      this.setState({ users });\n    });\n\n    this.socket.on('newMessage', (data) => {\n      const { message, messageID, name } = data;\n      this.addNewMessage({ message, messageID, name });\n      const { current } = this.messagesRef;\n      this.messagesScrol(current);\n    });\n  }\n\n  addNewMessage = (message) => {\n    const { messages } = this.state;\n    this.setState({\n      messages: [...messages, message],\n    });\n  }\n\n  resetMessage = (value) => {\n    this.setState({\n      message: value,\n    });\n  }\n\n  messagesScrol = (node) => {\n    node.scrollTop = node.scrollHeight;\n  }\n\n\n  render() {\n    return (\n      <div id=\"actions\">\n        <ChatContent {...this.state} {...this.props} messagesRef={this.messagesRef} />\n        <ChatActions\n          {...this.state}\n          resetMessage={this.resetMessage}\n          socket={this.socket}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Chat;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Auth from '../auth/Auth';\nimport Chat from '../chat/Chat';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route\n          exact\n          path=\"/\"\n          component={props => (\n            <Auth\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path=\"/chat\"\n          component={props => (\n            <Chat\n              {...props}\n            />\n          )}\n        />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/app/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}